/* react-lego */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove default margin.
 */
body {
  margin: 0;
}
/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}
/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}
/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}
/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}
/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}
/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}
/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}
/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}
/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}
/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}
/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}
/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}
/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}
/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}
/**
 * Re-set default cursor for disabled elements.
 *
 * Input types do not display default cursor if element contains styling
 * that overrides cursor.
 */
button[disabled],
html input[disabled] {
  cursor: default !important;
}
/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}
/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}
/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}
/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}
/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
/*------------------------------------*
  RESET
*------------------------------------*/
body,
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
fieldset,
img {
  border: 0;
}
address,
caption,
cite,
dfn,
th,
var {
  font-style: normal;
  font-weight: normal;
}
caption,
th {
  text-align: left;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}
q:before,
q:after {
  content: '';
}
abbr,
acronym {
  border: 0;
}
.no-wrap {
  white-space: nowrap;
}
* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
  width: 100%;
}
html {
  -webkit-font-smoothing: antialiased;
  color: rgba(0, 0, 0, 0.87);
  font-family: 'Roboto', sans-serif;
  background-color: #ffffff;
}
hr {
  border: none;
  border-bottom: solid 1px #e0e0e0;
}
.mui-text-full-black {
  color: #000000;
}
.mui-text-dark-black {
  color: rgba(0, 0, 0, 0.87);
}
.mui-text-light-black {
  color: rgba(0, 0, 0, 0.54);
}
.mui-text-min-black {
  color: rgba(0, 0, 0, 0.26);
}
.mui-text-full-white {
  color: #ffffff;
}
.mui-text-dark-white {
  color: rgba(255, 255, 255, 0.87);
}
.mui-text-light-white {
  color: rgba(255, 255, 255, 0.54);
}
.mui-font-weight-light {
  font-weight: 300;
}
.mui-font-weight-normal {
  font-weight: 400;
}
.mui-font-weight-medium {
  font-weight: 500;
}
/* Type Styles */
.mui-font-style-display-4 {
  font-size: 112px;
  line-height: 128px;
  letter-spacing: -7px;
  padding-top: 17px;
  margin-bottom: 15px;
  font-weight: 300;
  color: rgba(0, 0, 0, 0.54);
}
.mui-font-style-display-3 {
  font-size: 56px;
  line-height: 64px;
  letter-spacing: -2px;
  padding-top: 8px;
  margin-bottom: 28px;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.54);
}
.mui-font-style-display-2 {
  font-size: 45px;
  line-height: 48px;
  margin-bottom: 11px;
  letter-spacing: -1px;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.54);
}
.mui-font-style-display-1 {
  font-size: 34px;
  line-height: 40px;
  padding-top: 8px;
  margin-bottom: 12px;
  letter-spacing: -1px;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.54);
}
.mui-font-style-headline {
  font-size: 24px;
  line-height: 32px;
  padding-top: 16px;
  margin-bottom: 12px;
  letter-spacing: 0;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-title {
  font-size: 20px;
  line-height: 28px;
  padding-top: 19px;
  margin-bottom: 13px;
  letter-spacing: 0;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-subhead-2 {
  font-size: 15px;
  line-height: 28px;
  padding-top: 2px;
  margin-bottom: 10px;
  letter-spacing: 0;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-subhead-1 {
  font-size: 15px;
  line-height: 28px;
  padding-top: 2px;
  margin-bottom: 10px;
  letter-spacing: 0;
  font-weight: 400;
  line-height: 24px;
  padding-top: 3px;
  margin-bottom: 13px;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-body-2 {
  font-size: 13px;
  line-height: 24px;
  padding-top: 4px;
  margin-bottom: 12px;
  letter-spacing: 0;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-body-1 {
  font-size: 13px;
  line-height: 20px;
  padding-top: 6px;
  margin-bottom: 14px;
  letter-spacing: 0;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-caption {
  font-size: 12px;
  line-height: 20px;
  padding-top: 6px;
  margin-bottom: 14px;
  letter-spacing: 0;
  font-weight: 400;
  color: rgba(0, 0, 0, 0.54);
}
.mui-font-style-menu {
  font-size: 13px;
  line-height: 20px;
  padding-top: 6px;
  margin-bottom: 14px;
  letter-spacing: 0;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.87);
}
.mui-font-style-button {
  font-size: 14px;
  line-height: 20px;
  padding-top: 5px;
  margin-bottom: 15px;
  letter-spacing: 0;
  text-transform: uppercase;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.87);
}
/* General HTML Typography */
body {
  font-size: 13px;
  line-height: 20px;
}
hr {
  margin-top: 0;
  margin-bottom: 18px;
}
.mui-predefined-layout-1 .mui-app-content-canvas {
  padding-top: 64px;
}
.mui-predefined-layout-1 .mui-app-bar {
  position: fixed;
  height: 64px;
}
.mui-key-width-1 {
  width: 64px;
}
.mui-key-width-2 {
  width: 128px;
}
.mui-key-width-3 {
  width: 192px;
}
.mui-key-width-4 {
  width: 256px;
}
.mui-key-width-5 {
  width: 320px;
}
.mui-key-width-6 {
  width: 384px;
}
.mui-key-width-7 {
  width: 448px;
}
.mui-key-width-8 {
  width: 512px;
}
.mui-key-width-9 {
  width: 576px;
}
.mui-key-width-10 {
  width: 640px;
}
.mui-key-height-1 {
  height: 64px;
}
.mui-key-height-2 {
  height: 128px;
}
.mui-key-height-3 {
  height: 192px;
}
.mui-key-height-4 {
  height: 256px;
}
.mui-key-height-5 {
  height: 320px;
}
.mui-key-height-6 {
  height: 384px;
}
.mui-key-height-7 {
  height: 448px;
}
.mui-key-height-8 {
  height: 512px;
}
.mui-key-height-9 {
  height: 576px;
}
.mui-key-height-10 {
  height: 640px;
}
.fl {
  float: left;
}
.fr {
  float: right;
}
.fs12 {
  font-size: 12px;
}
.grayc {
  color: #ccc;
}
.gray9 {
  color: #999;
}
.gray6 {
  color: #666;
}
.p10 {
  padding: 10px;
}
.plr10 {
  padding-left: 10px;
  padding-right: 10px;
}
.mt10 {
  margin-top: 10px;
}
.mb10 {
  margin-bottom: 10px;
}
.mlr10 {
  margin-left: 10px;
  margin-right: 10px;
}
/*.justify{
	@extend %justify;
}*/
.sup-wrap {
  position: relative;
}
.sup-wrap .sup-num {
  position: absolute;
  top: -4px;
  right: -14px;
  border-radius: 10px;
  min-width: 17px;
  color: #fff;
  font-size: 12px;
  background-color: #ffb74d;
  line-height: 1.4;
  text-align: center;
  padding: 0 4px;
  -webkit-transform: scale(0.9);
  transform: scale(0.9);
}
.sup-wrap .sup-circle {
  position: absolute;
  top: -2px;
  right: -4px;
  width: 8px;
  height: 8px;
  border-radius: 8px;
  background-color: #ffb74d;
}
.guide-title {
  margin: 10px 0 0 10px;
  font-weight: bold;
  font-size: 16px;
}
/*.ellipsis{
	@extend %ellipsis;
}*/
.full-width {
  width: 100%;
  box-sizing: border-box;
}
.pos-s {
  position: static !important;
}
/*.cm-overlay{
	display: none;
	background: $overlayBg;
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: $zIndexOverlay;
	&.active{
		display: block;
	}
	&.cm-overlay--transparent{
		background:rgba(0,0,0,0);
	}
}*/
.cm-header {
  position: fixed;
  left: 0;
  right: 0;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  top: 0;
  height: 44px;
  line-height: 44px;
  text-align: center;
  background-color: #42a5f5;
  color: #fff;
  z-index: 960;
}
.cm-header .cm-page-title,
.cm-header .cm-page-mutil-title,
.cm-header .cm-page-select-title {
  position: absolute;
  left: 88px;
  right: 88px;
}
.cm-header .cm-page-title {
  line-height: 44px;
  /*@extend %ellipsis;*/
  font-size: 18px;
  box-sizing: border-box;
}
.cm-header .cm-page-title .cm-title-l {
  line-height: 28px;
  display: block;
}
.cm-header .cm-page-title .cm-title-s {
  line-height: 1;
  font-size: 12px;
  display: block;
}
.cm-header .cm-page-mutil-title {
  font-size: 14px;
  line-height: 19px;
  padding-top: 4px;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: 2;
  height: 44px;
}
.cm-header .cm-page-tabs-title {
  position: absolute;
  left: 50%;
  -webkit-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  display: inline-block;
  background-color: #42a5f5;
  border-radius: 5px;
  padding: 1px;
  line-height: 32px;
  margin: 5px 0 0 0;
}
.cm-header .cm-page-tabs-title span {
  float: left;
  padding: 0 15px;
}
.cm-header .cm-page-tabs-title span.active {
  background-color: #42a5f5;
  color: #fff;
}
.cm-header .cm-page-tabs-title span:first-child {
  border-radius: 5px 0 0 5px;
}
.cm-header .cm-page-tabs-title span:last-child {
  border-radius: 0 5px 5px 0;
}
.cm-header .cm-page-select-title {
  line-height: 44px;
}
.cm-header .cm-page-select-title::after {
  content: "";
  /*@include arrow(bottom, 6px, #fff);*/
  display: inline-block;
  margin-left: 5px;
  vertical-align: middle;
  position: relative;
  top: -2px;
  transition: all 0.3s ease-in-out;
}
.cm-header .cm-page-select-title.expanded::after {
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  top: 1px;
}
.cm-header .cm-header-icon,
.cm-header .cm-header-btn {
  cursor: pointer;
}
.cm-header .cm-header-icon:active,
.cm-header .cm-header-btn:active {
  background-color: #128ef2;
}
.cm-header .cm-header-icon {
  width: 44px;
  height: 44px;
  display: inline-block;
  text-align: center;
}
.cm-header .cm-header-btn {
  padding: 0 10px;
}
.cm-header--light {
  background: #fff;
  color: #42a5f5;
}
.cm-header--light .icon-back {
  background: none;
}
.cm-header--light .icon-back::before {
  border-color: #42a5f5;
}
.cm-header--light .cm-page-tabs-title {
  color: #fff;
}
.cm-header--light .cm-header-icon:active,
.cm-header--light .cm-header-btn:active {
  background-color: transparent;
}
.cm-header--light .cm-page-tabs-title span {
  color: #42a5f5;
  background-color: #fff;
}
.cm-header--light .cm-page-select-title::after {
  border-color: #42a5f5;
}
.cm-header--light .icon-email {
  background-position: -24px -124px;
}
.cm-header--light .icon-home {
  background-position: 0 -124px;
}
body {
  background: #eee;
}
.example-page {
  text-align: center;
}

/*# sourceMappingURL=data:application/json;base64, */